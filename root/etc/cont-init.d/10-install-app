#!/usr/bin/with-contenv bash

source /etc/env

rm -rf /app/*

if [[ $APP == "radarr" ]]; then
    if [[ $VERSION == /* ]]; then
        tar xzf $VERSION -C /app --strip-components=1
    else
        case $VERSION in
            stable)     url=$(curl -s https://api.github.com/repos/radarr/radarr/releases | jq -r .[0].assets[].browser_download_url | grep -o ".*Radarr.*.linux.tar.gz")
                        ;;
            unstable)   jobid=$(curl -s https://ci.appveyor.com/api/projects/galli-leo/radarr-usby1/branch/develop | jq -r '.build.jobs[0].jobId')
                        filename=$(curl -s https://ci.appveyor.com/api/buildjobs/${jobid}/artifacts | jq -r '.[].fileName' | grep -o ".*Radarr.*.linux.tar.gz")
                        url=https://ci.appveyor.com/api/buildjobs/${jobid}/artifacts/${filename}
                        ;;
            *)          jobid=$(curl -s https://ci.appveyor.com/api/projects/galli-leo/radarr-usby1/build/${VERSION} | jq -r '.build.jobs[0].jobId')
                        filename=$(curl -s https://ci.appveyor.com/api/buildjobs/${jobid}/artifacts | jq -r '.[].fileName' | grep -o ".*Radarr.*.linux.tar.gz")
                        url=https://ci.appveyor.com/api/buildjobs/${jobid}/artifacts/${filename}
                        ;;
        esac
        curl -s --fail -o /tmp/app.tar.gz -L $url && tar xzf /tmp/app.tar.gz -C /app --strip-components=1 && rm /tmp/app.tar.gz
    fi
fi

if [[ $APP == "lidarr" ]]; then
    if [[ $VERSION == /* ]]; then
        tar xzf $VERSION -C /app --strip-components=1
    else
        case $VERSION in
            stable)     jobid=$(curl -s https://ci.appveyor.com/api/projects/lidarr/lidarr/branch/develop | jq -r '.build.jobs[0].jobId')
                        #jobid=$(curl -s https://ci.appveyor.com/api/projects/lidarr/lidarr/branch/master | jq -r '.build.jobs[0].jobId')
                        filename=$(curl -s https://ci.appveyor.com/api/buildjobs/${jobid}/artifacts | jq -r '.[].fileName' | grep -o ".*Lidarr.*.linux.tar.gz")
                        url=https://ci.appveyor.com/api/buildjobs/${jobid}/artifacts/${filename}
                        ;;
            unstable)   jobid=$(curl -s https://ci.appveyor.com/api/projects/lidarr/lidarr/branch/develop | jq -r '.build.jobs[0].jobId')
                        filename=$(curl -s https://ci.appveyor.com/api/buildjobs/${jobid}/artifacts | jq -r '.[].fileName' | grep -o ".*Lidarr.*.linux.tar.gz")
                        url=https://ci.appveyor.com/api/buildjobs/${jobid}/artifacts/${filename}
                        ;;
            *)          jobid=$(curl -s https://ci.appveyor.com/api/projects/lidarr/lidarr/build/${VERSION} | jq -r '.build.jobs[0].jobId')
                        filename=$(curl -s https://ci.appveyor.com/api/buildjobs/${jobid}/artifacts | jq -r '.[].fileName' | grep -o ".*Lidarr.*.linux.tar.gz")
                        url=https://ci.appveyor.com/api/buildjobs/${jobid}/artifacts/${filename}
                        ;;
        esac
        curl -s --fail -o /tmp/app.tar.gz -L $url && tar xzf /tmp/app.tar.gz -C /app --strip-components=1 && rm /tmp/app.tar.gz
    fi
fi

if [[ $APP == "sonarr" ]]; then
    if [[ $VERSION == /* ]]; then
        tar xzf $VERSION -C /app --strip-components=1
    else
        case $VERSION in
            stable)     url=http://download.sonarr.tv/v2/master/mono/NzbDrone.master.tar.gz
                        ;;
            unstable)   url=http://download.sonarr.tv/v2/develop/mono/NzbDrone.develop.tar.gz
                        ;;
            *)          if curl -s --fail --head -o /dev/null -L http://download.sonarr.tv/v2/master/mono/NzbDrone.master.${VERSION}.mono.tar.gz; then
                            url=http://download.sonarr.tv/v2/master/mono/NzbDrone.master.${VERSION}.mono.tar.gz
                        else
                            url=http://download.sonarr.tv/v2/develop/mono/NzbDrone.develop.${VERSION}.mono.tar.gz
                        fi
                        ;;
        esac
        curl -s --fail -o /tmp/app.tar.gz -L $url && tar xzf /tmp/app.tar.gz -C /app --strip-components=1 && rm /tmp/app.tar.gz
    fi
fi

if [[ $APP == "jackett" ]]; then
    if [[ $VERSION == /* ]]; then
        tar xzf $VERSION -C /app --strip-components=1
    else
        case $VERSION in
            stable)     url=$(curl -s https://api.github.com/repos/jackett/jackett/releases/latest | jq -r .assets[].browser_download_url | grep -o ".*Jackett.Binaries.Mono.tar.gz")
                        ;;
            unstable)   url=$(curl -s https://api.github.com/repos/jackett/jackett/releases | jq -r .[0].assets[].browser_download_url | grep -o ".*Jackett.Binaries.Mono.tar.gz")
                        ;;
            *)          url=$(curl -s https://api.github.com/repos/jackett/jackett/releases/tags/v$VERSION | jq -r .assets[].browser_download_url | grep -o ".*Jackett.Binaries.Mono.tar.gz")
                        ;;
        esac
        curl -s --fail -o /tmp/app.tar.gz -L $url && tar xzf /tmp/app.tar.gz -C /app --strip-components=1 && rm /tmp/app.tar.gz
    fi
fi

if [[ $APP == "nzbhydra" ]]; then
    if [[ $VERSION == /* ]]; then
        tar xzf $VERSION -C /app --strip-components=1
    else
        case $VERSION in
            stable)     url=$(curl -s https://api.github.com/repos/theotherp/nzbhydra/releases/latest | jq -r .tarball_url)
                        ;;
            unstable)   url=https://github.com/theotherp/nzbhydra/archive/master.tar.gz
                        ;;
            *)          url=https://github.com/theotherp/nzbhydra/archive/$VERSION.tar.gz
                        ;;
        esac
        curl -s --fail -o /tmp/app.tar.gz -L $url && tar xzf /tmp/app.tar.gz -C /app --strip-components=1 && rm /tmp/app.tar.gz
    fi
fi

if [[ $APP == "nzbhydra2" ]]; then
    if [[ $VERSION == /* ]]; then
        unzip $VERSION -d /app
    else
        case $VERSION in
            stable)     url=$(curl -s https://api.github.com/repos/theotherp/nzbhydra2/releases/latest | jq -r .assets[].browser_download_url | grep -o ".*nzbhydra2-.*-linux.zip")
                        ;;
            unstable)   url=$(curl -s https://api.github.com/repos/theotherp/nzbhydra2/releases | jq -r .[0].assets[].browser_download_url | grep -o ".*nzbhydra2-.*-linux.zip")
                        ;;
            *)          url=$(curl -s https://api.github.com/repos/theotherp/nzbhydra2/releases/tags/v$VERSION | jq -r .assets[].browser_download_url | grep -o ".*nzbhydra2-.*-linux.zip")
                        ;;
        esac
        curl -s --fail -o /tmp/app.zip -L $url && unzip /tmp/app.zip -d /app && rm /tmp/app.zip
        chmod +x /app/nzbhydra2
    fi
fi

if [[ $APP == "nzbget" ]]; then
    if [[ $VERSION == /* ]]; then
        sh $VERSION --destdir /app
    else
        case $VERSION in
            stable)     url=$(curl -s https://api.github.com/repos/nzbget/nzbget/releases/latest | jq -r .assets[].browser_download_url | grep -o ".*nzbget-.*-bin-linux.run")
                        ;;
            unstable)   url=$(curl -s https://api.github.com/repos/nzbget/nzbget/releases | jq -r .[0].assets[].browser_download_url | grep -o ".*nzbget-.*-bin-linux.run")
                        ;;
            *)          url=$(curl -s https://api.github.com/repos/nzbget/nzbget/releases/tags/v$VERSION | jq -r .assets[].browser_download_url | grep -o ".*nzbget-.*-bin-linux.run")
                        ;;
        esac
        curl -s --fail -o /tmp/app.run -L $url && sh /tmp/app.run --destdir /app && rm /tmp/app.run
    fi
fi

chown -R hotio:hotio /app
